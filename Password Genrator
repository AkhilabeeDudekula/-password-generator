import tkinter as tk
from tkinter import ttk
import random
import string

class PasswordGeneratorApp:
    def __init__(self, master):
        self.master = master
        self.master.title("Password Generator")

        self.label_length = ttk.Label(master, text="Password Length:")
        self.label_length.grid(row=0, column=0, padx=10, pady=10, sticky=tk.W)

        self.length_var = tk.StringVar()
        self.length_entry = ttk.Entry(master, textvariable=self.length_var)
        self.length_entry.grid(row=0, column=1, padx=10, pady=10)

        self.label_characters = ttk.Label(master, text="Character Set:")
        self.label_characters.grid(row=1, column=0, padx=10, pady=10, sticky=tk.W)

        self.characters_var = tk.StringVar()
        self.characters_entry = ttk.Entry(master, textvariable=self.characters_var)
        self.characters_entry.grid(row=1, column=1, padx=10, pady=10)
        self.characters_entry.insert(0, string.ascii_letters + string.digits + string.punctuation)

        self.generate_button = ttk.Button(master, text="Generate Password", command=self.generate_password)
        self.generate_button.grid(row=2, columnspan=2, padx=10, pady=10)

        self.password_var = tk.StringVar()
        self.password_entry = ttk.Entry(master, textvariable=self.password_var, state='readonly')
        self.password_entry.grid(row=3, columnspan=2, padx=10, pady=10)

    def generate_password(self):
        try:
            length = int(self.length_var.get())
            if length <= 0:
                raise ValueError("Password length must be a positive integer.")

            characters = self.characters_var.get()
            if len(characters) == 0:
                raise ValueError("Character set cannot be empty.")

            password = ''.join(random.choice(characters) for _ in range(length))
            self.password_var.set(password)
        except ValueError as e:
            self.password_var.set("Error: " + str(e))

def main():
    root = tk.Tk()
    app = PasswordGeneratorApp(root)
    root.mainloop()

if __name__ == "__main__":
    main()
